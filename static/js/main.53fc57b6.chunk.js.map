{"version":3,"sources":["form.tsx","table.tsx","App.tsx","index.tsx"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialState","handleChange","e","_e$currentTarget","currentTarget","name","value","setState","objectSpread","state","defineProperty","submitForm","handleSubmit","job","_this$state","react_default","a","createElement","type","onChange","onClick","Component","TableHeader","scope","TableBody","rows","characterData","map","row","index","key","className","removeCharacter","Table","_Component","apply","arguments","inherits","createClass","_this$props","table_TableHeader","table_TableBody","App","characters","data","character","concat","toConsumableArray","filter","i","_this2","fetch","then","result","json","entry","table_Table","src_form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.53fc57b6.chunk.js","sourcesContent":["import React, {ChangeEvent, Component} from 'react';\r\nimport {Character} from \"./table\";\r\n\r\ninterface IProps {\r\n    handleSubmit(character: Character): void\r\n}\r\n\r\ninterface IState extends Character {\r\n\r\n}\r\n\r\nclass Form extends Component <IProps, IState> {\r\n    initialState: IState;\r\n\r\n    constructor(props: IProps) {\r\n        super(props)\r\n\r\n        this.initialState = {\r\n            name: '',\r\n            job: '',\r\n        };\r\n\r\n        this.state = this.initialState\r\n    }\r\n\r\n    handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({\r\n            ...this.state, [name as keyof IState]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const {name, job} = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}/>\r\n                <label>Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange}/>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React, {Component} from 'react'\r\n\r\nexport interface Character {\r\n    name: string,\r\n    job: string\r\n}\r\n\r\nexport interface RemoveCharacter {\r\n    (index: number): void;\r\n}\r\n\r\ntype Props = {\r\n    characterData: Character[],\r\n    removeCharacter: RemoveCharacter\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n        <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Job</th>\r\n            <th scope=\"col\">Delete</th>\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props: Props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button type=\"button\" className=\"btn btn-primary\"\r\n                            onClick={() => props.removeCharacter(index)}>Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nexport class Table extends Component<Props> {\r\n    render(): JSX.Element {\r\n        const {characterData, removeCharacter} = this.props\r\n        return (\r\n            <table className=\"table\">\r\n                <TableHeader/>\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport Form from './form';\nimport {Table, Character} from './table';\n\n\nclass App extends Component {\n    state: { characters: Character[], data: string[] } = {\n        characters: [\n            {\n                name: 'Charlie',\n                job: 'Janitor',\n            },\n            {\n                name: 'Mac',\n                job: 'Bouncer',\n            },\n            {\n                name: 'Dee',\n                job: 'Aspring actress',\n            },\n            {\n                name: 'Dennis',\n                job: 'Bartender',\n            }\n\n        ],\n        data: []\n    };\n\n    componentDidMount() {\n        const url =\n            'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\n\n        fetch(url)\n            .then(result => result.json())\n            .then(result => {\n                this.setState({\n                    data: result,\n                })\n            })\n    }\n\n\n    render(): JSX.Element {\n        const {data} = this.state;\n        const result = data.map((entry, index) => {\n            return <li key={index}>{entry}</li>\n        })\n\n        return (\n            <div className=\"container\">\n                <ul>{result}</ul>\n                <br/>\n                <Table characterData={this.state.characters} removeCharacter={this.removeCharacter}/>\n                <Form handleSubmit={this.handleSubmit}/>\n            </div>\n        );\n    }\n\n    handleSubmit = (character: Character) => {\n        this.setState({\n            characters: [...this.state.characters, character]\n        })\n    }\n\n\n    removeCharacter = (index: number) => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}